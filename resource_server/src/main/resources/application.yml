# Copyright 2024 European Commission
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

server:
  port: 8085
  error:
    include-message: always

spring:
  #config:
  #  import: file:.env[.properties]
  datasource:
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    url: jdbc:mysql://${SPRING_DATASOURCE_DB_URL}/${SPRING_DATASOURCE_DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
  profiles:
    include:
      - "crypto"

  application:
    name: qtsp
    version: 0.0.1

  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${AUTHORIZATION_SERVER_JWT_SET_URI}/oauth2/jwks
          issuer-uri: ${AUTHORIZATION_SERVER_ISSUER_URI}

auth:
  dbEncryptionPassphrase: ${DB_ENCRYPTION_PASSPHRASE}
  dbEncryptionSalt: ${DB_ENCRYPTION_SALT}

info:
  specs: "2.0.0.0"
  name: "remote Qualifies Electronic Signature R3 QTSP"
  logo: "img"
  region: "EU"
  lang: "en-US"
  description: "This is a test Qualified Trust Service Provider"
  authType:
    - "oauth2code"
  oauth2: "https://walletcentric.signer.eudiw.dev"
  asynchronousOperationMode: false
  methods:
    - "oauth2/authorize"
    - "oauth2/token"
    - "credentials/list"
    - "credentials/info"
    - "signatures/signHash"
  validationInfo: false
  signAlgorithms:
    algos:
      - "1.2.840.10045.2.1" # ecdsa or ecPublicKey
      - "1.2.840.10045.4.3.2" # ecdsa-with-SHA256
      # - "1.2.840.10045.4.3.3" # ecdsa-with-SHA384
      # - "1.2.840.10045.4.3.4" # ecdsa-with-SHA512
  signature_formats:
    P:
      - "Enveloped"
    X:
      - "Enveloped"
      - "Enveloping"
      - "Detached"
      - "Internally detached"
    C:
      - "Enveloping"
      - "Detached"
    J:
      - "Enveloping"
      - "Detached"
  conformance_levels:
    - "Ades-B-B"
    - "Ades-B-T"
    - "Ades-B-LT"
    - "Ades-B-LTA"

credentials:
  onlyValidSupport: false

logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.springframework.security.oauth2: INFO

ejbca:
  cahost: ${EJBCA_HOST}
  clientP12ArchiveFilepath: ${EJBCA_CLIENT_P12_FILEPATH}
  clientP12ArchivePassword: ${EJBCA_CLIENT_P12_PASSWORD}
  managementCA: ${EJBCA_MANAGEMENT_CA}
  endpoint: /certificate/pkcs10enroll
  certificateProfileName: ${EJBCA_CERTIFICATE_PROFILE_NAME}
  endEntityProfileName: ${EJBCA_END_ENTITY_PROFILE_NAME}
  username: ${EJBCA_USERNAME}
  password: ${EJBCA_PASSWORD}
  includeChain: true

  countries:
    - country: CZ
      certificateAuthorityName: PID Issuer CA - CZ 02
    - country: EE
      certificateAuthorityName: PID Issuer CA - EE 02
    - country: EU
      certificateAuthorityName: PID Issuer CA - EU 02
    - country: LU
      certificateAuthorityName: PID Issuer CA - LU 02
    - country: NL
      certificateAuthorityName: PID Issuer CA - NL 02
    - country: PT
      certificateAuthorityName: PID Issuer CA - PT 02
    - country: default
      certificateAuthorityName: PID Issuer CA - UT 02